#!/bin/bash -e

cd $(dirname "$0")

touch -a ~/.ssh/config # aquí es donde se agregarán los servidores

config=$(head -n3 ~/.ssh/config | paste -sd '')
rsa="Host *    PubkeyAcceptedKeyTypes=+ssh-rsa    HostKeyAlgorithms=+ssh-rsa"

if [ "$config" == "$rsa" ];then
        echo ""
else
        config=~/.ssh/config
        sed -i '1i\Host *' $config
        sed -i '2i\    PubkeyAcceptedKeyTypes=+ssh-rsa' $config
        sed -i '3i\    HostKeyAlgorithms=+ssh-rsa\n' $config
fi


#Detecta si estas en Winbugs o Linux
if [ "Msys" == $(uname -o) ] 2> /dev/null; then
  fzf=$(find ./* -name "fzf.exe" 2> /dev/null)

elif [ "Linux" == $(uname -s) ] 2> /dev/null; then
        #fzf=$(which fzf 2> /dev/null) || fzf=$(find ~/* -name "fzf" 2> /dev/null)
        fzf=$(find ./* -name "fzf" 2> /dev/null)

else
        echo "no se detecta fzf, instalalo :v"
fi

while true; do
  op=$(printf "1 - Acceder SSH\n2 - Agregar Servidor\n3 - Ver .ssh/config\n4 - Editar Archivo Remoto \n5 - Enviar Archivo\n6 - Descargar Archivo\n7 - Salir" | $fzf --layout=reverse | awk '{print $1}')
  case $op in

    1)
      clear;server=$(grep -Ev "HostName|User|IdentityFile|ProxyJump|+ssh-rsa|+ssh-rsa" ~/.ssh/config 2> /dev/null | sed 's/\*//g' | awk '{print $2}' | awk /./ | sort -k 3 | "$fzf" --layout=reverse)
	  ping -c 2 $(cat ~/.ssh/config | grep -A 1 $server | grep HostName | awk '{print $2}') > /dev/null #2>&1 # Realizar ping al servidor SSH remoto, sobre todo si lo ejecutas desde WSL
	  ssh -o StrictHostKeyChecking=no $server
      ;;

    2)
      while true; do
        clear;read -p "Nombre del servidor: " host

        if [ -z "$host" ]; then
          echo "Debe ingresar un nombre de servidor. Inténtelo nuevamente.";sleep 1s
        elif grep -qx "Host $host" ~/.ssh/config; then
          echo "$host ya existe";sleep 1s
        else
          break
        fi
      done

      while true; do
        read -p "Nombre de Usuario: " id

        if [ -z "$id" ]; then
          echo "Debe ingresar un nombre de usuario. Inténtelo nuevamente.";sleep 1s
        else
          break
        fi
      done

      while true; do
        read -p "IP del servidor: " ip

        if [ -z "$ip" ]; then
          echo "Debe ingresar una dirección IP. Inténtelo nuevamente.";sleep 1s
        else
          break
        fi
      done

      read -p "Desea acceder por llave?(y/n): " yn1
      if [ "$yn1" = 'y' ]; then
        key=$(find ~/ -type f 2> /dev/null | fzf --prompt="Selecciona la llave: ")
        chmod 600 $key
      fi

      read -p "Desea agregarle un Servidor de salto?(y/n): " yn2
      if [ "$yn2" = 'y' ]; then
        read -p "Hostname del servidor de salto: " hostjump
      fi

      if [ "$yn1" = 'y' ] && [ "$yn2" = 'y' ]; then
        printf "
            \nHost $host
            HostName $ip
            User $id
            IdentityFile $key
            ProxyJump $hostjump" >> ~/.ssh/config

      elif [ "$yn1" = 'y' ] && [ "$yn2" = 'n' ]; then
        printf "
            \nHost $host
            HostName $ip
            User $id
            IdentityFile $key" >> ~/.ssh/config

      elif [ "$yn1" = 'n' ] && [ "$yn2" = 'y' ]; then
        printf "
            \nHost $host
            HostName $ip
            User $id
            ProxyJump $hostjump" >> ~/.ssh/config

      elif [ "$yn1" = 'n' ] && [ "$yn2" = 'n' ]; then
        ping -c 2 $ip
        ssh-copy-id -o StrictHostKeyChecking=no $id@$ip
        printf "
            \nHost $host
            HostName $ip
            User $id" >> ~/.ssh/config
      else
        echo "Respuesta incorrecta, intentalo de nuevo"
      fi

      clear
      echo "Servidor $host agregado!"
      sleep 1s
      ;;

    3)
      clear && nvim ~/.ssh/config
      ;;
    
    4)clear && \
	server=$(grep -Ev "HostName|User|IdentityFile|ProxyJump|+ssh-rsa|+ssh-rsa" ~/.ssh/config 2> /dev/null | sed 's/\*//g' | awk '{print $2}' | awk /./ | sort -k 3 | "$fzf" --layout=reverse)
	file=$(ssh $server "find / -type f 2> /dev/null" | "$fzf" --layout=reverse)
	vim scp://$server/$file
	;;
	
    5)clear && \
	server=$(grep -Ev "HostName|User|IdentityFile|ProxyJump|+ssh-rsa|+ssh-rsa" ~/.ssh/config 2> /dev/null | sed 's/\*//g' | awk '{print $2}' | awk /./ | sort -k 3 | "$fzf" --layout=reverse)
	file=$(find ~ -type f -not -path '*/\.git/*' 2> /dev/null | "$fzf" --layout=reverse)
	dest=$(ssh "$server" "find / -type d 2> /dev/null" | "$fzf" --layout=reverse)
	scp $file $server:$dest
	read -n 1 -s -r -p "Enviado. Presiona cualquier tecla para continuar..."
	;;

    6)clear && \
	server=$(grep -Ev "HostName|User|IdentityFile|ProxyJump|+ssh-rsa|+ssh-rsa" ~/.ssh/config 2> /dev/null | sed 's/\*//g' | awk '{print $2}' | awk /./ | sort -k 3 | "$fzf" --layout=reverse)
	file=$(ssh $server "find / -type f 2> /dev/null" | "$fzf" --layout=reverse)
	dest=$(find ~ -type d 2> /dev/null | "$fzf" --layout=reverse)
	scp $server:$file $dest
	read -n 1 -s -r -p "Descargado. Presiona cualquier tecla para continuar..."
	;;
    7)
      clear && echo "Adios!" && exit 1
      ;;

    *)
      clear && echo "No válido. Inténtelo de nuevo" && sleep 1s
      ;;
  esac
done
